<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.2">Jekyll</generator><link href="http://clintcecil.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://clintcecil.com/" rel="alternate" type="text/html" /><updated>2017-03-25T23:44:19-05:00</updated><id>http://clintcecil.com/</id><title type="html">Clint Cecil.com</title><subtitle>Software Engineer, Mathematician, Analyst</subtitle><entry><title type="html">Bracketless Bracket</title><link href="http://clintcecil.com/2017/03/25/bracketless_bracket/" rel="alternate" type="text/html" title="Bracketless Bracket" /><published>2017-03-25T17:00:00-05:00</published><updated>2017-03-25T17:00:00-05:00</updated><id>http://clintcecil.com/2017/03/25/bracketless_bracket</id><content type="html" xml:base="http://clintcecil.com/2017/03/25/bracketless_bracket/">&lt;h3 id=&quot;article-to-be-updated-at-end-of-ncaa-tournament&quot;&gt;Article to be updated at end of NCAA Tournament.&lt;/h3&gt;

&lt;h2 id=&quot;the-game&quot;&gt;The Game&lt;/h2&gt;
&lt;p&gt;A few years ago, we set out upon looking for ways to choose our draft order for fantasy football and I stumbled on an article about an alternative betting pool that didn’t require much prior knowledge to win. I think the original source of the method is Bill James, as linked &lt;a href=&quot;http://blogs.wsj.com/numbers/ncaa-bracket-math-1043/&quot;&gt;here&lt;/a&gt; but it’s behind a paywall now.&lt;/p&gt;

&lt;p&gt;The gist of the game is that every participant picks one team from each seed. That is one 1 seed, one 2 seed, one 3 seed, etc. Each win that team earns earns the participant points. Points are based on seed, starting with 100 points for a 1 seed, 110 for a 2 seed, all the way down to 250 for a 16 seed win.&lt;/p&gt;

&lt;p&gt;The first year doing it, we each threw in $10 and also used it to pick our fantasy football draft order to huge success. The biggest worry was that we would have ties and have to settle the draft order some other way, but with fourteen participants, we had no ties.&lt;/p&gt;

&lt;p&gt;After the first year of success, we continued the following year without the involvement of the fantasy football league. Again, we had fourteen participants, and this time we had one tie for seventh place. In both of the first years it came down to the final game for the win.&lt;/p&gt;

&lt;p&gt;This year, with half the elite eight games complete, I think the winner has been determined. I haven’t run all the numbers, but from a cursory glance it would seem the leader is uncatchable with the lineups of the other participants. Personally, I would have finished last if it weren’t for my Dad performing even worse than I did.&lt;/p&gt;

&lt;p&gt;This year we expanded to have 19 teams competing. We have one tie currently, but the players have opposing teams facing off in the next round to break the tie. I will update once the bracket is complete with final results.&lt;/p&gt;

&lt;p&gt;I would like to invite more people, but I fear that if too many people join there will be more issues of ties in the game. This may end being an interesting statistical problem to determine maximum number of participants without the likelihood of a tie for the top few spots.&lt;/p&gt;

&lt;p&gt;While there are 2^32 sets of teams possible to choose, many of the choices end up being equivalent from a score perspective. For instance, this year, no 13, 14, 15, or 16 seed won a game. With all the ties at different seed levels there were essentially 46,656 unique scores of the original 4,294,967,296 lineups (as of 3/25 with 5 games left). This isn’t eliminating ways you can tie with different lineups, just eliminates differences when multiple teams of the same seed scored the same number of wins.&lt;/p&gt;

&lt;h2 id=&quot;the-logistics-and-tech-behind-the-game&quot;&gt;The Logistics and Tech Behind the Game&lt;/h2&gt;

&lt;p&gt;For the first year I had participants email me their choices for each seed and I made a complicated spreadsheet to keep track of all the scoring. Being lazy last year led me to reuse the same sheet. Everybody could view it on google spreadsheets and check the scores and I updated it daily with the results.&lt;/p&gt;

&lt;p&gt;This year I built a quick rails app on Selection Sunday with a simple form to select each seed and threw it up on digital ocean. With the exception of some problems from a few technologically hindered people, the form and app worked without a hitch.&lt;/p&gt;

&lt;p&gt;For some analysis, I added pages which calculate the optimal lineup possible and which show how many people selected each team and how teams of each seed compare.&lt;/p&gt;

&lt;p&gt;While simple, the app does a lot of calculations on the fly that I may run as a one time calculation on scoring updates and serve as static data in the future.&lt;/p&gt;

&lt;p&gt;I would also like to make a better interface for selecting teams, maybe something that highlights all the paths through the bracket there are for teams participants already selected so they don’t end up picking teams that face each other in the first couple rounds. That would require a bit more logic in terms of the bracket structure. Currently there are team records with seeds, a boolean to show if they’re eliminated, and win count.&lt;/p&gt;

&lt;p&gt;The other improvement would be an admin interface. I logged into the server and used the console to update each team’s records with win counts and elimination status this year. The alternative to this would be some sort of scraper which automatically updated scores.&lt;/p&gt;

&lt;p&gt;I’m hoping to open source the code and share it around to some other sports fans to see if anybody else likes the format for next year. This might also lead to some interesting pull requests to add features to the site.&lt;/p&gt;

&lt;h2 id=&quot;ideas-for-more-games&quot;&gt;Ideas for more games:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://underlyinglogic.blogspot.com/2006/03/better-march-madness-pool.html&quot;&gt;A Better March Madness Pool by Erik Simpson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sportsonearth.com/article/219270426&quot;&gt;5 Alternative NCAA Tourney Pools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.slate.com/articles/sports/sports_nut/2013/03/ncaa_bracket_2013_bored_with_your_tourney_pool_here_are_11_alternate_ways.html&quot;&gt;Ted Gooley Method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://aarontodd.casinocitytimes.com/article/top-10-betting-alternatives-to-an-ncaa-bracket-60629&quot;&gt;Point spread bracket lottery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m also planning to write an app for the fantasy football three-for-all this year, where we use standard fantasy scoring and pick one wide receiver, one running back, and one quarterback each week during the playoffs without being able to use any player more than once. We’ve run this before with some interesting results, but never had an app to calculate scores.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Header courtesy of &lt;a href=&quot;http://www.freewebheaders.com&quot;&gt;http://www.freewebheaders.com&lt;/a&gt;&lt;/p&gt;</content><author><name>Clint Cecil</name></author><summary type="html">Article to be updated at end of NCAA Tournament.</summary></entry><entry><title type="html">Tools</title><link href="http://clintcecil.com/2017/03/20/tools/" rel="alternate" type="text/html" title="Tools" /><published>2017-03-20T11:09:00-05:00</published><updated>2017-03-20T11:09:00-05:00</updated><id>http://clintcecil.com/2017/03/20/tools</id><content type="html" xml:base="http://clintcecil.com/2017/03/20/tools/">&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.apple.com&quot;&gt;Macbook Pro&lt;/a&gt;&lt;/strong&gt; - The Macbook Pro has met every need I’ve had. I miss the expandable memory and storage of the older models though. I’m not sold on the new version of the Macbook Pro. I don’t think I could go back to Windows full-time at this point though, although I do keep threatening to switch to a linux environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.iterm2.com/documentation-highlights.html&quot;&gt;iTerm2&lt;/a&gt;&lt;/strong&gt; - iTerm2 version 3 has many features that are of great use while programming. Features I use regularly include split panes (cmd-d and cmd-shift-d), cmd-click filenames to edit that file, and the paste history. There are more features than I can remember, and the app increases productivity almost instantly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.zsh.org/&quot;&gt;Zsh&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;Oh-my-zsh&lt;/a&gt;&lt;/strong&gt; - Zsh improves upon bash in every way. Text completion is awesome. Path expansion improves navigation immeasurably. The improved command history functionality is also a huge time saver. Oh-my-zsh supports numerous plugins and themes for zsh.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;&lt;/strong&gt; - Git is an easy to learn version control system for tracking changes in files worked on by multiple people. It was created by Linus for developing Linux. It is distributed so every git directory is a full-fledged repo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.github.com&quot;&gt;Github&lt;/a&gt;&lt;/strong&gt; - Github has revolutionized the programming world. Nearly every major open source project is hosted on github.com. It has driven the adoption of git as the VCS to use. The feature set is copied on other sites such as &lt;a href=&quot;http://www.bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt;, but there’s nothing quite as good as the original. It’s free to use as long as your project is open to the public.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://gist.github.com&quot;&gt;Gist&lt;/a&gt;&lt;/strong&gt; - Github’s little brother, a great site developed by the Github team to share snippets of code with full syntax highlighting and easy to use interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt;&lt;/strong&gt; - Ruby is my current programming language of choice, with Rails being the default framework for web development in Ruby. It’s quick to get an app up and running and has matured to the point of having widespread support for whatever issues you run into.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.getbootstrap.com&quot;&gt;Bootstrap&lt;/a&gt;&lt;/strong&gt; - Bootstrap is the most popular web framework for building responsive projects. There are a variety of css themes but for prototyping using the default css is quick and easy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.atom.io&quot;&gt;Atom&lt;/a&gt;&lt;/strong&gt; - Atom is a highly extensible IDE released by the team at Github. It works as well as anything I’ve used and requires less learning than vim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.getpostman.com&quot;&gt;Postman&lt;/a&gt;&lt;/strong&gt; - Postman is a great tool for developing APIs. You can import and export saved API documentation and examples. The only feature I wish it had was the ability to sync with a git repo to share requests amongst a team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://chrome.google.com&quot;&gt;Chrome&lt;/a&gt;&lt;/strong&gt; - Google’s browser has a wide variety of plugins and a solid set of developer tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/strong&gt; - Stack Overflow has allowed people to find answers to questions they seek (about programming). Gone are the days of searching through forums for somebody with similar issues to yours. If you google an issue with a modern programming language, chances are the first dozen results are Stack Overflow questions and answers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.spotify.com&quot;&gt;Spotify&lt;/a&gt;&lt;/strong&gt; - While not related to programming, Spotify does provide music, which helps keep me from getting distracted by outside influences. Spotify is a great service and a great interface. The library is huge and ad-free service is worth the price of the subscription if used on a regular basis. The daily mixes are getting better and better to my taste and I’ve actually discovered numerous bands I like from the “Discover Weekly” playlist they generate.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Header photo taken by Clint Cecil at Yellowstone Lake in Yellowstone National Park, Wyoming.&lt;/p&gt;</content><author><name>Clint Cecil</name></author><summary type="html">Macbook Pro - The Macbook Pro has met every need I’ve had. I miss the expandable memory and storage of the older models though. I’m not sold on the new version of the Macbook Pro. I don’t think I could go back to Windows full-time at this point though, although I do keep threatening to switch to a linux environment.</summary></entry><entry><title type="html">My AcuRite</title><link href="http://clintcecil.com/2017/03/16/myacurite/" rel="alternate" type="text/html" title="My AcuRite" /><published>2017-03-16T09:38:00-05:00</published><updated>2017-03-16T09:38:00-05:00</updated><id>http://clintcecil.com/2017/03/16/myacurite</id><content type="html" xml:base="http://clintcecil.com/2017/03/16/myacurite/">&lt;p&gt;Once OneVue launched, the team shifted to work on &lt;a href=&quot;https://www.myacurite.com&quot;&gt;My AcuRite&lt;/a&gt;. My AcuRite is a site dedicated to home environmental monitoring using devices manufactured by Chaney Electronics under the AcuRite brand. Sensor types include temperature, humidity, wind speed and direction, rainfall, lightning proximity, light intensity, and water detection. The site offers monitoring that will notify users when sensors go out of range, useful for things like detecting freezing around pipes or the presence of water in a basement.&lt;/p&gt;

&lt;p&gt;“Smart Hubs” are paired with each sensor and connected to the internet to send data to the servers. These hubs send sensor data to our servers a few times per minute. This presents an interesting challenge in scalability as we are processing approximately four hundred thousand requests per hour. Micro-services handle the load by scaling independently to process data, relying on queueing systems to keep everything cohesive.&lt;/p&gt;

&lt;p&gt;Most of the existing framework built for OneVue was applicable for My AcuRite. Most of the work done has been optimization and support for more custom endpoints to limit data transmission on mobile devices. We created a second bastion API which allows access to some of the same micro-services behind OneVue. We also now support native apps on iOS and Android.&lt;/p&gt;

&lt;p&gt;One other challenge in building the site was the migration of data from the old site. We worked with the old contractors to spec out an API to access customer data, then built a webpage that allowed users to enter username and password and import the data to the new site. This also triggered a flag to update the firmware of their devices to point at the new service. Once the firmware was updated, it started reporting data and would be automatically claimed by the “new” user in our system. We tested the system by sending invites to a few thousand users as beta testers and monitored the performance of our system.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Header photo taken by Clint Cecil at Tower Falls in Yellowstone National Park, Wyoming.&lt;/p&gt;</content><author><name>Clint Cecil</name></author><summary type="html">Once OneVue launched, the team shifted to work on My AcuRite. My AcuRite is a site dedicated to home environmental monitoring using devices manufactured by Chaney Electronics under the AcuRite brand. Sensor types include temperature, humidity, wind speed and direction, rainfall, lightning proximity, light intensity, and water detection. The site offers monitoring that will notify users when sensors go out of range, useful for things like detecting freezing around pipes or the presence of water in a basement.</summary></entry><entry><title type="html">Primex OneVue</title><link href="http://clintcecil.com/2017/03/16/onevue/" rel="alternate" type="text/html" title="Primex OneVue" /><published>2017-03-16T05:09:00-05:00</published><updated>2017-03-16T05:09:00-05:00</updated><id>http://clintcecil.com/2017/03/16/onevue</id><content type="html" xml:base="http://clintcecil.com/2017/03/16/onevue/">&lt;p&gt;I took a job with &lt;a href=&quot;http://www.primexinc.com&quot;&gt;Primex&lt;/a&gt; in 2014 after meeting Kevin Runde at a Ruby Meetup shortly after moving back to Madison.&lt;/p&gt;

&lt;p&gt;Kevin compiled one of the best teams I have ever been a part of. We started with a team of one DevOps administrator, one Architect, three members of the “service team” to work on the back-end API, and two members of the “UI team” to build the JS website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.primexonevue.com&quot;&gt;OneVue&lt;/a&gt; is a system for both environmental monitoring and time solutions for B2B consumers mostly consisting of schools and health systems. For schools, there are clocks that set themselves based on an NTP server as well as update statuses of connection and battery level through the web interface. For hospitals, there are a variety of sensors to measure environmental factors like temperature and humidity. When a measurement goes out of range, we send notification emails, phone calls, and text messages to a list of users. We also keep detailed logs for compliance purposes.&lt;/p&gt;

&lt;p&gt;We started working on replacing the existing systems for Primex OneVue. We built from the ground up starting with some micro-services built in Ruby on Rails. Our rails apps deliver JSON exclusively. Between the front-end and the micro-services we have a bastion API. We have a separate ReactJS front-end that consumes the APIs through the bastion API.&lt;/p&gt;

&lt;p&gt;The OneVue system utilizes an impressive array of cloud technologies. We use EC2, VPC, S3, RDS, Cloudfront, Route 53, Cloudwatch, API Gateway, Kinesis, and SQS. We’ve worked with MySQL, Postgres, Redis, and DynamoDB with different parts of our application. We use Rails, Python, and JS for our programs.&lt;/p&gt;

&lt;p&gt;Working on this app was interesting as my first experience writing a pure API. Focusing on scalability and efficiency in processing the readings coming from our sensors is also an interesting proposition, as well as reliability for the customers.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Header photo taken by Clint Cecil at Jackson Lake in Grand Teton National Park, Wyoming.&lt;/p&gt;</content><author><name>Clint Cecil</name></author><summary type="html">I took a job with Primex in 2014 after meeting Kevin Runde at a Ruby Meetup shortly after moving back to Madison.</summary></entry><entry><title type="html">Job Experience at CTAC</title><link href="http://clintcecil.com/2017/03/16/ctac/" rel="alternate" type="text/html" title="Job Experience at CTAC" /><published>2017-03-16T05:09:00-05:00</published><updated>2017-03-16T05:09:00-05:00</updated><id>http://clintcecil.com/2017/03/16/ctac</id><content type="html" xml:base="http://clintcecil.com/2017/03/16/ctac/">&lt;p&gt;In 2011, after about a year at Epic, I decided to pack up and head back east to work with some college buddies at &lt;a href=&quot;https://www.ctacorp.com/&quot;&gt;CTAC&lt;/a&gt; in Fairfax, VA.&lt;/p&gt;

&lt;p&gt;CTAC was a shock to the system after Epic. The team dynamic was a lot smaller and seemed closer knit. I became good friends with most of my coworkers and started learning how to write dynamic web apps.&lt;/p&gt;

&lt;p&gt;I started working on the &lt;a href=&quot;https://syndication.hhs.gov&quot;&gt;Syndication Project&lt;/a&gt;, which allowed government agencies (and outside agencies) to publish articles to their websites while sharing them with other websites. There was a system of feeds you could subscribe to and automatically publish articles on multiple locations at once, as well as updating and removing content. This application was written in Groovy with Grails. It was an interesting language to work with, although I found the support for Ruby and Rails to be much better at the time. When we couldn’t figure out how to do something we tended to fall back on java and so our project was a strange mix in the early days.&lt;/p&gt;

&lt;p&gt;After working on Syndication, I moved to the Rails team and started learning Ruby on Rails. I worked on numerous projects with Rails, including ICRAS (the now defunct paperworkreduction.gov), DARMIS, and some internal projects for HHS.&lt;/p&gt;

&lt;p&gt;I enjoyed my time at CTAC immensely. I felt like I was learning the entire time I was employed there. I never felt comfortable living in the DC Metro Area, and wanted to return to Madison though. CTAC was gracious enough to allow me to work remotely for a while until I found a new position at Primex in WI.&lt;/p&gt;

&lt;p&gt;One thing I can say about getting out of government contracting is there are a lot less meetings now than when I was there. With so many eyes on the projects and so many people with vested interest, it was hard to just get work done and make something useful.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Header photo taken by Clint Cecil at Rocky Mountain National Park, Wyoming.&lt;/p&gt;</content><author><name>Clint Cecil</name></author><summary type="html">In 2011, after about a year at Epic, I decided to pack up and head back east to work with some college buddies at CTAC in Fairfax, VA.</summary></entry><entry><title type="html">Job Experience at Epic</title><link href="http://clintcecil.com/2017/03/15/epic/" rel="alternate" type="text/html" title="Job Experience at Epic" /><published>2017-03-15T06:36:00-05:00</published><updated>2017-03-15T06:36:00-05:00</updated><id>http://clintcecil.com/2017/03/15/epic</id><content type="html" xml:base="http://clintcecil.com/2017/03/15/epic/">&lt;p&gt;In 2010, with no idea where to even begin looking for a job, I started searching the internet for where to go make my fortune. After a short time of looking online at different positions and realizing there was not much to choose from in Western MD and the surrounding areas, &lt;a href=&quot;http://www.epic.com&quot;&gt;Epic&lt;/a&gt; in Verona, WI contacted me regarding my resume posted online.&lt;/p&gt;

&lt;p&gt;I had never thought of Wisconsin as a place I would ever want to visit, let alone live, but decided to go check out both the area and the company. As soon as I got to Madison I loved it.&lt;/p&gt;

&lt;p&gt;Once through the interview process, I packed up my belongings and some furniture collected from yard sales and moved to Madison. I started as a programmer in September of 2010.&lt;/p&gt;

&lt;p&gt;When I started at Epic, I was one of a couple hundred hired around that time. We studied a variety of topics like version control and internal processes for code review. I learned the importance of coding standards when working in a large organization.&lt;/p&gt;

&lt;p&gt;I was assigned to the Kaleidoscope team which worked on the product for Ophthalmologists. This was an interesting product and I was happy to be a part of it. This was my first real experience working on a small team. (It also improved my spelling as I had never had to write out kaleidoscope or ophthalmology before.)&lt;/p&gt;

&lt;p&gt;After a while, I felt like the learning stopped and I was trapped using the dated technology their system was built on. I was afraid at the time I’d get pigeon-holed into working with the same technology for a prolonged period. My college friend Steffen contacted me with an offer of a job at CTAC and took it, although I missed Madison a lot.&lt;/p&gt;

&lt;p&gt;I think the experience at Epic was a good one. Most of my friends in Madison either work there or used to. I learned a lot and enjoyed living on my own in a strange city for the first time. I think if I were to go back I would enjoy it more and have more success with the maturity I’ve developed over the last several years.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Header photo taken by Clint Cecil at Rocky Mountain National Park, Wyoming.&lt;/p&gt;</content><author><name>Clint Cecil</name></author><summary type="html">In 2010, with no idea where to even begin looking for a job, I started searching the internet for where to go make my fortune. After a short time of looking online at different positions and realizing there was not much to choose from in Western MD and the surrounding areas, Epic in Verona, WI contacted me regarding my resume posted online.</summary></entry><entry><title type="html">College Experience at Frostburg</title><link href="http://clintcecil.com/2017/03/15/frostburg/" rel="alternate" type="text/html" title="College Experience at Frostburg" /><published>2017-03-15T05:36:00-05:00</published><updated>2017-03-15T05:36:00-05:00</updated><id>http://clintcecil.com/2017/03/15/frostburg</id><content type="html" xml:base="http://clintcecil.com/2017/03/15/frostburg/">&lt;p&gt;I attended &lt;a href=&quot;http://www.frostburg.edu&quot;&gt;FSU&lt;/a&gt; from 2005 to 2010 for both my B.S. and M.S. degrees. I graduated from FSU with a B.S. in Mathematics in 2008 and stayed on to get a M.S. in Computer Science in 2010.&lt;/p&gt;

&lt;p&gt;I originally started at the University of MD, but transferred after a year and a half. The differences were immense. I went from the feeling of being “just a number” to getting an individualized education in a smaller school. I can’t praise Frostburg enough.&lt;/p&gt;

&lt;p&gt;The math program at FSU was fantastic, I learned from a handful of great professors, my favorite being Dr. Hughes. I think I took six or eight classes from him by the time I graduated. I enjoyed Number Theory and Graph Theory the most. I think because the theories and techniques I learned were so readily applied to my programming.&lt;/p&gt;

&lt;p&gt;On a whim, while studying for my math degree, I took a computer science class. I took an immediate liking to programming and decided to pursue it. Due to an odd quirk in my timing, it actually would take less time to graduate with a Master’s degree than to switch to a double major. I completed a minor in CS and then worked with the CS department to get a graduate assistantship so I could afford to get a Master’s degree.&lt;/p&gt;

&lt;p&gt;Computer Science at Frostburg was an interesting and fun degree. Dr. Chitsaz was the most challenging professor I studied under in both his database and compiler courses. Professor Thiel, who taught digital logic and intro programming classes, and I have stayed in touch and regularly visit when I’m in town, still discussing topics in computer science and outside life.&lt;/p&gt;

&lt;p&gt;As a graduate assistant, I developed skills in interpersonal communication as well as a deeper understanding of the course material. I ran the computer lab a few hours a week for lower level programming courses and the new Discrete Mathematics course. I worked with students in office hours and graded homework and projects. Grading taught me more about reading other people’s code and being adaptable in my solutions to problems.&lt;/p&gt;

&lt;p&gt;I developed lasting friendships that have carried through to today with my fellow students in both programs at Frostburg. I even landed a job as a result of my contacts and the reputation of my peers.&lt;/p&gt;

&lt;p&gt;I can’t recommend Frostburg’s Math and Computer Science programs enough. I learned a ton, felt well prepared for my career, and made lasting relationships with professors and peers.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Header photo taken by Clint Cecil at Rocky Mountain National Park, Wyoming.&lt;/p&gt;</content><author><name>Clint Cecil</name></author><summary type="html">I attended FSU from 2005 to 2010 for both my B.S. and M.S. degrees. I graduated from FSU with a B.S. in Mathematics in 2008 and stayed on to get a M.S. in Computer Science in 2010.</summary></entry></feed>